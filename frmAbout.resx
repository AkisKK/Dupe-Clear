<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="pictureBox1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="label1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="label2.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="label4.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="label5.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="button1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="label8.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="label6.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="linkLabel1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>